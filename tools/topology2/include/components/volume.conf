#
# Common pipeline volume
#
# A generic volume component. All attributes defined herein are namespaced
# by alsatplg to "pga.attribute_name"
#
# Usage: this component can be used by declaring in the "widgets" field of
# a parent object. i.e.
#
# widgets [
# 	"pga.M.N" {
#		period_source_count	"2"
#		period_sink_count	"2"
#	}
# ]
#
# Where M is pipeline ID and N is a unique integer in the parent object.
<include/common/tokens.conf>
<include/controls/mixer.conf>
<include/controls/enum.conf>
<include/common/text.conf>

Class.Component."pga" {
	#
	# Argument used to construct component: pipeline ID
	#
	@args."pipeline_id" {
		type "integer"
	}

	#
	# Unique index per widget type in pipeline.
	#
	@args."index" {
		type "integer"
	}

	#include common component definition
	<include/components/component.conf>

	DefineAttribute.uuid {
		# Token set reference name and type
		token_ref	"sof_tkn_comp.uuid"
	}

	DefineAttribute.volume_ctl_name {}
	DefineAttribute.volume_switch_name {}

	#
	# Bespoke attributes for PGA
	#
	DefineAttribute.ramp_step_type {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
		constraints {
			value_ref	"sof_tkn_volume_ramp_type"
			values [
				"linear"
				"log"
				"linear_zc"
				"log_zc"
			]
		}
	}


	DefineAttribute.ramp_step_ms {
		# Token set reference name
		token_ref	"sof_tkn_volume.word"
	}

	attributes {
		mandatory [
			"no_pm"
			"uuid"
			"widget_type"
		]
		immutable [
			"uuid"
			"widget_type"
		]
		deprecated [
			"preload_count"
		]
	}

	mixer."$volume_ctl_name" {
		#Channel register and shift for Front Left/Right
		channel."fl" {
			shift	0
		}
		channel."fr" {}

		tlv."vtlv_m64s2" {}
	}

	mixer."$volume_switch_name" {
			channel."flw" {
				reg	2
				shift	0
			}
			channel."fl" {
				reg	2
				shift	1
			}
			channel."fr" {
				reg	2
				shift	2
			}
			channel."frw" {
				reg	2
				shift	2
			}

			ops."ctl" {
				info "volsw"
				#259 binds the mixer control to switch get/put handlers
				get "259"
				put "259"
			}

			#max 1 indicates switch type control
			max "1"
			invert "false"
		}

	enum."$pipeline_id.0.Master Of The Universe Enum" {

		#Channel register and shift for Front Left/Right
		channel."fl" {
			shift	0
		}
		channel."fr" {}

		text."test_enum" {
			values   [
				"L1"
				"L2"
				"R1"
				"R2"
				]
		}
		texts = "test_enum"
	}


	# Set default attribute values for PGA
	widget_type 		"pga"
	uuid 			"7e:67:7e:b7:f4:5f:88:41:af:14:fb:a8:bd:bf:86:82"
	no_pm			"true"
	period_sink_count	2
	period_source_count	2
	format			"$format" # format is based on pipeline format
	core_id 		0
}
